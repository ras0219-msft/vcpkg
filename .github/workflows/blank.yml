name: Formatting Review

on:
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest # Optional. [latest,nightly,v.X.Y.Z]

      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cache
        with:
          path: |
            ./vcpkg
          key: ${{ runner.os }}-${{ hashFiles('scripts/bootstrap*') }}

      - name: bootstrap
        if: steps.cache.outputs.cache-hit != 'true'
        run: ./bootstrap-vcpkg.sh

      - name: Run a one-line script
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.email "none@none.none"
          git config user.name "none"

          ./vcpkg format-manifest ports/*/vcpkg.json
          TMPFILE=$(mktemp)
          git diff >"${TMPFILE}"
          git add -u
          git commit -m "formatted"
          reviewdog -f=diff -f.diff.strip=1 -reporter=github-pr-review < "${TMPFILE}"

          ./vcpkg x-add-version --overwrite-version --all --skip-formatting-check
          TMPFILE=$(mktemp)
          git diff >"${TMPFILE}"
          git stash -u && git stash drop
          reviewdog -f=diff -f.diff.strip=1 -reporter=github-pr-check < "${TMPFILE}"
